name: dynamic matrix

on:
  push:
    branches:
      - master

jobs:

  generate-matrix:

    runs-on: ubuntu-latest

    outputs:
      # matrix: ${{ steps.set-matrix.outputs.matrix }}
      matrix: "${{ steps.set-matrix.outputs.test }}"
      ansible_core_version: "${{ steps.set-matrix.outputs.ansible_core_version }}"
    steps:

      - name: Checkout code âœ…
        uses: actions/checkout@v3

      - name: Calculate build matrix
        run: |
          echo -e "one\ntwo\nthree" | jq -R . | jq -s '{"arr": .}' > matrix.json

      - name: Set matrix output
        id: set-matrix
        # run: |
        #   jq . matrix.json
        #   echo "$(jq -r '.' "matrix.json")" >> "$GITHUB_OUTPUT"
        run: |
          echo "test='abc123'" >> $GITHUB_OUTPUT
        # run: |
        #   {
        #     echo 'GITHUB_OUTPUT<<EOF'
        #     echo "$(jq -r '.' "matrix.json")"
        #     echo EOF
        #   } >> "$GITHUB_ENV"

      - name: display matrix content
        run: |
          echo "${{ steps.generate-matrix.outputs }}"
          echo "${{ github.repository }}"
          echo "${{ github.repository_owner }}"
          echo "$(pwd)"
          echo "$(ls -la)"

      - name: find ansible-core version
        run: |
          ANSIBLE_CORE_VERSION=$(cat requirements-dev.txt| grep ansible-core)
          echo "ansible_core_version=$ANSIBLE_CORE_VERSION" >> $GITHUB_OUTPUT

  display-matrix:

    needs: [generate-matrix]

    runs-on: ubuntu-latest

    steps:

      - name: display matrix content
        run: |
          echo "${{ needs.generate-matrix.outputs.matrix }}"
          echo "${{ needs.generate-matrix.outputs.ansible_core_version }}"
